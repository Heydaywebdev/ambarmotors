apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ambarmotors-home-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
    - hosts:
        - staging.ambarmotors.com
      secretName: tls-secret-ambar-ev
  rules:
    - host: staging.ambarmotors.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ambarmotors-home
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ambarmotors-home
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: ambarmotors-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambarmotors-home
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ambarmotors-home
  template:
    metadata:
      labels:
        app: ambarmotors-home
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: ambarmotors-home
          image: registry.ezleads.io/ambarmotors/ambarmotors-home:<VERSION>
          imagePullPolicy: "Always"
          ports:
            - containerPort: 5000
          readinessProbe:
            successThreshold: 1
            failureThreshold: 2
            periodSeconds: 5
            initialDelaySeconds: 120
            httpGet:
              path: /api/health/readiness
              port: 5000
              scheme: HTTP
          livenessProbe:
            successThreshold: 1
            failureThreshold: 2
            periodSeconds: 5
            initialDelaySeconds: 120
            timeoutSeconds: 1
            httpGet:
              path: /api/health/liveness
              port: 5000
              scheme: HTTP
      imagePullSecrets:
        - name: regcred
